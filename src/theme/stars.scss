
$border-color: #2f45bd;

@mixin item-gradient() {

  --background: #163c87 !important;
  --background: linear-gradient(to right, #163c87 0%, #1f82d0 100%) !important;

  color: #fff !important;
}

@mixin prominent-item-gradient() {

  --background: #002400 !important;
  --background: linear-gradient(to right, #002400 0%, #52b152 100%) !important;

  color: #fff !important;
}

// thanks to: https://codepen.io/angiebadfox/pen/RRdQAb
ion-content, .translucent-container:before {
	--background: radial-gradient(bottom, ellipse farthest-corner,  rgb(9,76,114) 0%,rgb(1,41,63) 100%);
	--background: radial-gradient(ellipse at bottom, rgb(9,76,114) 0%, rgb(1,41,63) 100%);
	--background: radial-gradient(bottom, ellipse, rgb(9,76,114) 0%, rgb(1,41,63) 100%);
	--background: radial-gradient(ellipse at bottom,  rgb(9,76,114) 0%,rgb(1,41,63) 100%);
}

@function box-shadow($stars) {
	$bxshadow: ();
	@for $i from 1 to $stars {
		$bxshadow: append($bxshadow, (random(2000) + 0px) (random(2000) + 0px) #fff, comma);
	}
	@return ($bxshadow);
}

$bxshadow-large: box-shadow(300);
$bxshadow-medium: box-shadow(500);
$bxshadow-small: box-shadow(800);

@keyframes blink-large {
	0% {
		box-shadow: $bxshadow-large;
	}	
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-large;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-large;
	}
}

@keyframes blink-medium {
	0% {
		box-shadow: $bxshadow-medium;
	}	
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-medium;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-medium;
	}
}

@keyframes blink-small {
	0% {
		box-shadow: $bxshadow-small;
	}	
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-small;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-small;
	}
}

.stars {
	position: fixed;
}

/*
.stars.large {
	height: 3px;
	width: 3px;
	background: transparent;
	box-shadow: $bxshadow-large;
	// animation: blink-large 7s infinite;
}
.stars.medium {
	height: 2px;
	width: 2px;
	background: transparent;
	box-shadow: $bxshadow-medium;
	// animation: blink-medium 5s infinite;
}
.stars.small {
	height: 1px;
	width: 1px;
	background: transparent;
	box-shadow: $bxshadow-small;
	// animation: blink-small 3s infinite;
}
*/

ion-card {
  border-radius: 10px;
  border: 2px solid $border-color;

  ion-card-header {
    border-bottom: 1px solid $border-color;
  }

  ion-card-content {
    padding-top: 20px !important;
  }

  &, ion-card-header, ion-card-content, ion-card-title {
    @include item-gradient();
  }
}

ion-tab-bar {
  background: transparent !important;

  ion-tab-button {
		color: #aaa;
		
		&:hover {
			ion-label {
				color: #ccc;
			}
		}

    &.tab-selected {
      color: #fff;
    }
  }
}

ion-list {
  background: transparent !important;

  ion-list-header {
    color: #fff;
  }

  ion-item {
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 10px;
    margin-right: 10px;

    border: 1px solid $border-color;
    border-radius: 5px;
    
		@include item-gradient();
		
		&.faded {
			filter: grayscale(100%);
		}

		&.prominent {
			@include prominent-item-gradient();
		}
  }
}

ion-icon {
  color: #fff;
}

.blank-slate {
  color: #fff !important;
}

.split-pane-side {
  --border: 1px solid $border-color;
}

ol {
  margin-block-start: 0;
}

ion-item-divider {
  @include item-gradient();
}

ion-searchbar .searchbar-input {
  @include item-gradient();
}
